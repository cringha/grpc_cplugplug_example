// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: lidar-data.proto
// Protobuf C++ Version: 5.27.2

#include "lidar-data.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace lidar {
namespace collector {

inline constexpr DataResult_::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        details_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DataResult_::DataResult_(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataResult_DefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataResult_DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataResult_DefaultTypeInternal() {}
  union {
    DataResult_ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataResult_DefaultTypeInternal _DataResult__default_instance_;

inline constexpr DataRequest_::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filters_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        step_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DataRequest_::DataRequest_(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataRequest_DefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataRequest_DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataRequest_DefaultTypeInternal() {}
  union {
    DataRequest_ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataRequest_DefaultTypeInternal _DataRequest__default_instance_;
}  // namespace collector
}  // namespace lidar
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_lidar_2ddata_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_lidar_2ddata_2eproto = nullptr;
const ::uint32_t
    TableStruct_lidar_2ddata_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lidar::collector::DataRequest_, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lidar::collector::DataRequest_, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::lidar::collector::DataRequest_, _impl_.step_),
        PROTOBUF_FIELD_OFFSET(::lidar::collector::DataRequest_, _impl_.filters_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lidar::collector::DataResult_, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lidar::collector::DataResult_, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::lidar::collector::DataResult_, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::lidar::collector::DataResult_, _impl_.details_),
        PROTOBUF_FIELD_OFFSET(::lidar::collector::DataResult_, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::lidar::collector::DataRequest_)},
        {11, -1, -1, sizeof(::lidar::collector::DataResult_)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::lidar::collector::_DataRequest__default_instance_._instance,
    &::lidar::collector::_DataResult__default_instance_._instance,
};
const char descriptor_table_protodef_lidar_2ddata_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020lidar-data.proto\022\017lidar.collector\"@\n\014D"
    "ataRequest_\022\021\n\ttimestamp\030\001 \001(\003\022\014\n\004step\030\002"
    " \001(\005\022\017\n\007filters\030\003 \001(\t\"M\n\013DataResult_\022\016\n\006"
    "status\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022\017\n\007details"
    "\030\003 \001(\t\022\014\n\004data\030\004 \001(\0142\\\n\013DataService\022M\n\014G"
    "etLidarData\022\035.lidar.collector.DataReques"
    "t_\032\034.lidar.collector.DataResult_\"\000b\006prot"
    "o3"
};
static ::absl::once_flag descriptor_table_lidar_2ddata_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_lidar_2ddata_2eproto = {
    false,
    false,
    282,
    descriptor_table_protodef_lidar_2ddata_2eproto,
    "lidar-data.proto",
    &descriptor_table_lidar_2ddata_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_lidar_2ddata_2eproto::offsets,
    file_level_enum_descriptors_lidar_2ddata_2eproto,
    file_level_service_descriptors_lidar_2ddata_2eproto,
};
namespace lidar {
namespace collector {
// ===================================================================

class DataRequest_::_Internal {
 public:
};

DataRequest_::DataRequest_(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lidar.collector.DataRequest_)
}
inline PROTOBUF_NDEBUG_INLINE DataRequest_::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lidar::collector::DataRequest_& from_msg)
      : filters_(arena, from.filters_),
        _cached_size_{0} {}

DataRequest_::DataRequest_(
    ::google::protobuf::Arena* arena,
    const DataRequest_& from)
    : ::google::protobuf::Message(arena) {
  DataRequest_* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, step_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::step_));

  // @@protoc_insertion_point(copy_constructor:lidar.collector.DataRequest_)
}
inline PROTOBUF_NDEBUG_INLINE DataRequest_::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : filters_(arena),
        _cached_size_{0} {}

inline void DataRequest_::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, step_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::step_));
}
DataRequest_::~DataRequest_() {
  // @@protoc_insertion_point(destructor:lidar.collector.DataRequest_)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataRequest_::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.filters_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DataRequest_::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(DataRequest_, _impl_._cached_size_),
              false,
          },
          &DataRequest_::MergeImpl,
          &DataRequest_::kDescriptorMethods,
          &descriptor_table_lidar_2ddata_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 44, 2> DataRequest_::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DataRequest__default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lidar::collector::DataRequest_>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DataRequest_, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DataRequest_, _impl_.timestamp_)}},
    // int32 step = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DataRequest_, _impl_.step_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DataRequest_, _impl_.step_)}},
    // string filters = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DataRequest_, _impl_.filters_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(DataRequest_, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 step = 2;
    {PROTOBUF_FIELD_OFFSET(DataRequest_, _impl_.step_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string filters = 3;
    {PROTOBUF_FIELD_OFFSET(DataRequest_, _impl_.filters_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\0\7\0\0\0\0"
    "lidar.collector.DataRequest_"
    "filters"
  }},
};

PROTOBUF_NOINLINE void DataRequest_::Clear() {
// @@protoc_insertion_point(message_clear_start:lidar.collector.DataRequest_)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filters_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.step_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.step_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* DataRequest_::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:lidar.collector.DataRequest_)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_timestamp(), target);
  }

  // int32 step = 2;
  if (this->_internal_step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_step(), target);
  }

  // string filters = 3;
  if (!this->_internal_filters().empty()) {
    const std::string& _s = this->_internal_filters();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lidar.collector.DataRequest_.filters");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lidar.collector.DataRequest_)
  return target;
}

::size_t DataRequest_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lidar.collector.DataRequest_)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string filters = 3;
  if (!this->_internal_filters().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_filters());
  }

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // int32 step = 2;
  if (this->_internal_step() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_step());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DataRequest_::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DataRequest_*>(&to_msg);
  auto& from = static_cast<const DataRequest_&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lidar.collector.DataRequest_)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filters().empty()) {
    _this->_internal_set_filters(from._internal_filters());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_step() != 0) {
    _this->_impl_.step_ = from._impl_.step_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataRequest_::CopyFrom(const DataRequest_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lidar.collector.DataRequest_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DataRequest_::InternalSwap(DataRequest_* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filters_, &other->_impl_.filters_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataRequest_, _impl_.step_)
      + sizeof(DataRequest_::_impl_.step_)
      - PROTOBUF_FIELD_OFFSET(DataRequest_, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata DataRequest_::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DataResult_::_Internal {
 public:
};

DataResult_::DataResult_(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lidar.collector.DataResult_)
}
inline PROTOBUF_NDEBUG_INLINE DataResult_::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lidar::collector::DataResult_& from_msg)
      : message_(arena, from.message_),
        details_(arena, from.details_),
        data_(arena, from.data_),
        _cached_size_{0} {}

DataResult_::DataResult_(
    ::google::protobuf::Arena* arena,
    const DataResult_& from)
    : ::google::protobuf::Message(arena) {
  DataResult_* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:lidar.collector.DataResult_)
}
inline PROTOBUF_NDEBUG_INLINE DataResult_::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        details_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void DataResult_::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
DataResult_::~DataResult_() {
  // @@protoc_insertion_point(destructor:lidar.collector.DataResult_)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataResult_::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.details_.Destroy();
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DataResult_::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(DataResult_, _impl_._cached_size_),
              false,
          },
          &DataResult_::MergeImpl,
          &DataResult_::kDescriptorMethods,
          &descriptor_table_lidar_2ddata_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 50, 2> DataResult_::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DataResult__default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lidar::collector::DataResult_>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DataResult_, _impl_.data_)}},
    // int32 status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DataResult_, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DataResult_, _impl_.status_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DataResult_, _impl_.message_)}},
    // string details = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DataResult_, _impl_.details_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 status = 1;
    {PROTOBUF_FIELD_OFFSET(DataResult_, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(DataResult_, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string details = 3;
    {PROTOBUF_FIELD_OFFSET(DataResult_, _impl_.details_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data = 4;
    {PROTOBUF_FIELD_OFFSET(DataResult_, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\7\7\0\0\0\0"
    "lidar.collector.DataResult_"
    "message"
    "details"
  }},
};

PROTOBUF_NOINLINE void DataResult_::Clear() {
// @@protoc_insertion_point(message_clear_start:lidar.collector.DataResult_)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.details_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* DataResult_::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:lidar.collector.DataResult_)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_status(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lidar.collector.DataResult_.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string details = 3;
  if (!this->_internal_details().empty()) {
    const std::string& _s = this->_internal_details();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lidar.collector.DataResult_.details");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lidar.collector.DataResult_)
  return target;
}

::size_t DataResult_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lidar.collector.DataResult_)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // string details = 3;
  if (!this->_internal_details().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_details());
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DataResult_::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DataResult_*>(&to_msg);
  auto& from = static_cast<const DataResult_&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lidar.collector.DataResult_)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_details().empty()) {
    _this->_internal_set_details(from._internal_details());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataResult_::CopyFrom(const DataResult_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lidar.collector.DataResult_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DataResult_::InternalSwap(DataResult_* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.details_, &other->_impl_.details_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
        swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata DataResult_::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace collector
}  // namespace lidar
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_lidar_2ddata_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
