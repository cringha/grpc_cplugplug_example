// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: camera-service.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_camera_2dservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_camera_2dservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_camera_2dservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_camera_2dservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_camera_2dservice_2eproto;
namespace service {
namespace grpc {
class BytesBody;
struct BytesBodyDefaultTypeInternal;
extern BytesBodyDefaultTypeInternal _BytesBody_default_instance_;
class CameraMeta_;
struct CameraMeta_DefaultTypeInternal;
extern CameraMeta_DefaultTypeInternal _CameraMeta__default_instance_;
class CameraMeta__InfoEntry_DoNotUse;
struct CameraMeta__InfoEntry_DoNotUseDefaultTypeInternal;
extern CameraMeta__InfoEntry_DoNotUseDefaultTypeInternal _CameraMeta__InfoEntry_DoNotUse_default_instance_;
class CameraMetas;
struct CameraMetasDefaultTypeInternal;
extern CameraMetasDefaultTypeInternal _CameraMetas_default_instance_;
class ImageRequest_;
struct ImageRequest_DefaultTypeInternal;
extern ImageRequest_DefaultTypeInternal _ImageRequest__default_instance_;
class ImageShape_;
struct ImageShape_DefaultTypeInternal;
extern ImageShape_DefaultTypeInternal _ImageShape__default_instance_;
}  // namespace grpc
}  // namespace service
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace service {
namespace grpc {

// ===================================================================


// -------------------------------------------------------------------

class ImageShape_ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:service.grpc.ImageShape_) */ {
 public:
  inline ImageShape_() : ImageShape_(nullptr) {}
  ~ImageShape_() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ImageShape_(
      ::google::protobuf::internal::ConstantInitialized);

  inline ImageShape_(const ImageShape_& from) : ImageShape_(nullptr, from) {}
  inline ImageShape_(ImageShape_&& from) noexcept
      : ImageShape_(nullptr, std::move(from)) {}
  inline ImageShape_& operator=(const ImageShape_& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageShape_& operator=(ImageShape_&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImageShape_& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImageShape_* internal_default_instance() {
    return reinterpret_cast<const ImageShape_*>(
        &_ImageShape__default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ImageShape_& a, ImageShape_& b) { a.Swap(&b); }
  inline void Swap(ImageShape_* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImageShape_* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImageShape_* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ImageShape_>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ImageShape_& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ImageShape_& from) { ImageShape_::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ImageShape_* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "service.grpc.ImageShape_"; }

 protected:
  explicit ImageShape_(::google::protobuf::Arena* arena);
  ImageShape_(::google::protobuf::Arena* arena, const ImageShape_& from);
  ImageShape_(::google::protobuf::Arena* arena, ImageShape_&& from) noexcept
      : ImageShape_(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWidthFieldNumber = 1,
    kHeightFieldNumber = 2,
    kChannelFieldNumber = 3,
  };
  // int32 width = 1;
  void clear_width() ;
  ::int32_t width() const;
  void set_width(::int32_t value);

  private:
  ::int32_t _internal_width() const;
  void _internal_set_width(::int32_t value);

  public:
  // int32 height = 2;
  void clear_height() ;
  ::int32_t height() const;
  void set_height(::int32_t value);

  private:
  ::int32_t _internal_height() const;
  void _internal_set_height(::int32_t value);

  public:
  // int32 channel = 3;
  void clear_channel() ;
  ::int32_t channel() const;
  void set_channel(::int32_t value);

  private:
  ::int32_t _internal_channel() const;
  void _internal_set_channel(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:service.grpc.ImageShape_)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ImageShape__default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ImageShape_& from_msg);
    ::int32_t width_;
    ::int32_t height_;
    ::int32_t channel_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2dservice_2eproto;
};
// -------------------------------------------------------------------

class CameraMeta__InfoEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          CameraMeta__InfoEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      CameraMeta__InfoEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  CameraMeta__InfoEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraMeta__InfoEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit CameraMeta__InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const CameraMeta__InfoEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const CameraMeta__InfoEntry_DoNotUse*>(
        &_CameraMeta__InfoEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_camera_2dservice_2eproto;
};
// -------------------------------------------------------------------

class BytesBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:service.grpc.BytesBody) */ {
 public:
  inline BytesBody() : BytesBody(nullptr) {}
  ~BytesBody() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BytesBody(
      ::google::protobuf::internal::ConstantInitialized);

  inline BytesBody(const BytesBody& from) : BytesBody(nullptr, from) {}
  inline BytesBody(BytesBody&& from) noexcept
      : BytesBody(nullptr, std::move(from)) {}
  inline BytesBody& operator=(const BytesBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline BytesBody& operator=(BytesBody&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BytesBody& default_instance() {
    return *internal_default_instance();
  }
  static inline const BytesBody* internal_default_instance() {
    return reinterpret_cast<const BytesBody*>(
        &_BytesBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BytesBody& a, BytesBody& b) { a.Swap(&b); }
  inline void Swap(BytesBody* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BytesBody* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BytesBody* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BytesBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BytesBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BytesBody& from) { BytesBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BytesBody* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "service.grpc.BytesBody"; }

 protected:
  explicit BytesBody(::google::protobuf::Arena* arena);
  BytesBody(::google::protobuf::Arena* arena, const BytesBody& from);
  BytesBody(::google::protobuf::Arena* arena, BytesBody&& from) noexcept
      : BytesBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContentFieldNumber = 1,
  };
  // bytes content = 1;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // @@protoc_insertion_point(class_scope:service.grpc.BytesBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BytesBody_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BytesBody& from_msg);
    ::google::protobuf::internal::ArenaStringPtr content_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2dservice_2eproto;
};
// -------------------------------------------------------------------

class ImageRequest_ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:service.grpc.ImageRequest_) */ {
 public:
  inline ImageRequest_() : ImageRequest_(nullptr) {}
  ~ImageRequest_() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ImageRequest_(
      ::google::protobuf::internal::ConstantInitialized);

  inline ImageRequest_(const ImageRequest_& from) : ImageRequest_(nullptr, from) {}
  inline ImageRequest_(ImageRequest_&& from) noexcept
      : ImageRequest_(nullptr, std::move(from)) {}
  inline ImageRequest_& operator=(const ImageRequest_& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageRequest_& operator=(ImageRequest_&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImageRequest_& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImageRequest_* internal_default_instance() {
    return reinterpret_cast<const ImageRequest_*>(
        &_ImageRequest__default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ImageRequest_& a, ImageRequest_& b) { a.Swap(&b); }
  inline void Swap(ImageRequest_* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImageRequest_* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImageRequest_* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ImageRequest_>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ImageRequest_& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ImageRequest_& from) { ImageRequest_::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ImageRequest_* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "service.grpc.ImageRequest_"; }

 protected:
  explicit ImageRequest_(::google::protobuf::Arena* arena);
  ImageRequest_(::google::protobuf::Arena* arena, const ImageRequest_& from);
  ImageRequest_(::google::protobuf::Arena* arena, ImageRequest_&& from) noexcept
      : ImageRequest_(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSnFieldNumber = 1,
    kImageShapeFieldNumber = 2,
  };
  // string sn = 1;
  void clear_sn() ;
  const std::string& sn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sn(Arg_&& arg, Args_... args);
  std::string* mutable_sn();
  PROTOBUF_NODISCARD std::string* release_sn();
  void set_allocated_sn(std::string* value);

  private:
  const std::string& _internal_sn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sn(
      const std::string& value);
  std::string* _internal_mutable_sn();

  public:
  // .service.grpc.ImageShape_ imageShape = 2;
  bool has_imageshape() const;
  void clear_imageshape() ;
  const ::service::grpc::ImageShape_& imageshape() const;
  PROTOBUF_NODISCARD ::service::grpc::ImageShape_* release_imageshape();
  ::service::grpc::ImageShape_* mutable_imageshape();
  void set_allocated_imageshape(::service::grpc::ImageShape_* value);
  void unsafe_arena_set_allocated_imageshape(::service::grpc::ImageShape_* value);
  ::service::grpc::ImageShape_* unsafe_arena_release_imageshape();

  private:
  const ::service::grpc::ImageShape_& _internal_imageshape() const;
  ::service::grpc::ImageShape_* _internal_mutable_imageshape();

  public:
  // @@protoc_insertion_point(class_scope:service.grpc.ImageRequest_)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      37, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ImageRequest__default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ImageRequest_& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sn_;
    ::service::grpc::ImageShape_* imageshape_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2dservice_2eproto;
};
// -------------------------------------------------------------------

class CameraMeta_ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:service.grpc.CameraMeta_) */ {
 public:
  inline CameraMeta_() : CameraMeta_(nullptr) {}
  ~CameraMeta_() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraMeta_(
      ::google::protobuf::internal::ConstantInitialized);

  inline CameraMeta_(const CameraMeta_& from) : CameraMeta_(nullptr, from) {}
  inline CameraMeta_(CameraMeta_&& from) noexcept
      : CameraMeta_(nullptr, std::move(from)) {}
  inline CameraMeta_& operator=(const CameraMeta_& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraMeta_& operator=(CameraMeta_&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraMeta_& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraMeta_* internal_default_instance() {
    return reinterpret_cast<const CameraMeta_*>(
        &_CameraMeta__default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CameraMeta_& a, CameraMeta_& b) { a.Swap(&b); }
  inline void Swap(CameraMeta_* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraMeta_* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraMeta_* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CameraMeta_>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraMeta_& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraMeta_& from) { CameraMeta_::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CameraMeta_* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "service.grpc.CameraMeta_"; }

 protected:
  explicit CameraMeta_(::google::protobuf::Arena* arena);
  CameraMeta_(::google::protobuf::Arena* arena, const CameraMeta_& from);
  CameraMeta_(::google::protobuf::Arena* arena, CameraMeta_&& from) noexcept
      : CameraMeta_(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfoFieldNumber = 7,
    kSerialNumberFieldNumber = 1,
    kModelNameFieldNumber = 2,
    kManufactureNameFieldNumber = 3,
    kDeviceVersionFieldNumber = 4,
    kUserDefinedNameFieldNumber = 5,
    kCameraTypeFieldNumber = 6,
  };
  // map<string, string> info = 7;
  int info_size() const;
  private:
  int _internal_info_size() const;

  public:
  void clear_info() ;
  const ::google::protobuf::Map<std::string, std::string>& info() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_info();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_info() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_info();

  public:
  // string serialNumber = 1;
  void clear_serialnumber() ;
  const std::string& serialnumber() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_serialnumber(Arg_&& arg, Args_... args);
  std::string* mutable_serialnumber();
  PROTOBUF_NODISCARD std::string* release_serialnumber();
  void set_allocated_serialnumber(std::string* value);

  private:
  const std::string& _internal_serialnumber() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serialnumber(
      const std::string& value);
  std::string* _internal_mutable_serialnumber();

  public:
  // string modelName = 2;
  void clear_modelname() ;
  const std::string& modelname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_modelname(Arg_&& arg, Args_... args);
  std::string* mutable_modelname();
  PROTOBUF_NODISCARD std::string* release_modelname();
  void set_allocated_modelname(std::string* value);

  private:
  const std::string& _internal_modelname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_modelname(
      const std::string& value);
  std::string* _internal_mutable_modelname();

  public:
  // string manufactureName = 3;
  void clear_manufacturename() ;
  const std::string& manufacturename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_manufacturename(Arg_&& arg, Args_... args);
  std::string* mutable_manufacturename();
  PROTOBUF_NODISCARD std::string* release_manufacturename();
  void set_allocated_manufacturename(std::string* value);

  private:
  const std::string& _internal_manufacturename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_manufacturename(
      const std::string& value);
  std::string* _internal_mutable_manufacturename();

  public:
  // string deviceVersion = 4;
  void clear_deviceversion() ;
  const std::string& deviceversion() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deviceversion(Arg_&& arg, Args_... args);
  std::string* mutable_deviceversion();
  PROTOBUF_NODISCARD std::string* release_deviceversion();
  void set_allocated_deviceversion(std::string* value);

  private:
  const std::string& _internal_deviceversion() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deviceversion(
      const std::string& value);
  std::string* _internal_mutable_deviceversion();

  public:
  // string userDefinedName = 5;
  void clear_userdefinedname() ;
  const std::string& userdefinedname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_userdefinedname(Arg_&& arg, Args_... args);
  std::string* mutable_userdefinedname();
  PROTOBUF_NODISCARD std::string* release_userdefinedname();
  void set_allocated_userdefinedname(std::string* value);

  private:
  const std::string& _internal_userdefinedname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_userdefinedname(
      const std::string& value);
  std::string* _internal_mutable_userdefinedname();

  public:
  // string cameraType = 6;
  void clear_cameratype() ;
  const std::string& cameratype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cameratype(Arg_&& arg, Args_... args);
  std::string* mutable_cameratype();
  PROTOBUF_NODISCARD std::string* release_cameratype();
  void set_allocated_cameratype(std::string* value);

  private:
  const std::string& _internal_cameratype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cameratype(
      const std::string& value);
  std::string* _internal_mutable_cameratype();

  public:
  // @@protoc_insertion_point(class_scope:service.grpc.CameraMeta_)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      111, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CameraMeta__default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CameraMeta_& from_msg);
    ::google::protobuf::internal::MapField<CameraMeta__InfoEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        info_;
    ::google::protobuf::internal::ArenaStringPtr serialnumber_;
    ::google::protobuf::internal::ArenaStringPtr modelname_;
    ::google::protobuf::internal::ArenaStringPtr manufacturename_;
    ::google::protobuf::internal::ArenaStringPtr deviceversion_;
    ::google::protobuf::internal::ArenaStringPtr userdefinedname_;
    ::google::protobuf::internal::ArenaStringPtr cameratype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2dservice_2eproto;
};
// -------------------------------------------------------------------

class CameraMetas final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:service.grpc.CameraMetas) */ {
 public:
  inline CameraMetas() : CameraMetas(nullptr) {}
  ~CameraMetas() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraMetas(
      ::google::protobuf::internal::ConstantInitialized);

  inline CameraMetas(const CameraMetas& from) : CameraMetas(nullptr, from) {}
  inline CameraMetas(CameraMetas&& from) noexcept
      : CameraMetas(nullptr, std::move(from)) {}
  inline CameraMetas& operator=(const CameraMetas& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraMetas& operator=(CameraMetas&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraMetas& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraMetas* internal_default_instance() {
    return reinterpret_cast<const CameraMetas*>(
        &_CameraMetas_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CameraMetas& a, CameraMetas& b) { a.Swap(&b); }
  inline void Swap(CameraMetas* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraMetas* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraMetas* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CameraMetas>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraMetas& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraMetas& from) { CameraMetas::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CameraMetas* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "service.grpc.CameraMetas"; }

 protected:
  explicit CameraMetas(::google::protobuf::Arena* arena);
  CameraMetas(::google::protobuf::Arena* arena, const CameraMetas& from);
  CameraMetas(::google::protobuf::Arena* arena, CameraMetas&& from) noexcept
      : CameraMetas(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .service.grpc.CameraMeta_ data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::service::grpc::CameraMeta_* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField<::service::grpc::CameraMeta_>* mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<::service::grpc::CameraMeta_>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::service::grpc::CameraMeta_>* _internal_mutable_data();
  public:
  const ::service::grpc::CameraMeta_& data(int index) const;
  ::service::grpc::CameraMeta_* add_data();
  const ::google::protobuf::RepeatedPtrField<::service::grpc::CameraMeta_>& data() const;
  // @@protoc_insertion_point(class_scope:service.grpc.CameraMetas)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CameraMetas_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CameraMetas& from_msg);
    ::google::protobuf::RepeatedPtrField< ::service::grpc::CameraMeta_ > data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2dservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CameraMeta_

// string serialNumber = 1;
inline void CameraMeta_::clear_serialnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialnumber_.ClearToEmpty();
}
inline const std::string& CameraMeta_::serialnumber() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.grpc.CameraMeta_.serialNumber)
  return _internal_serialnumber();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CameraMeta_::set_serialnumber(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialnumber_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.grpc.CameraMeta_.serialNumber)
}
inline std::string* CameraMeta_::mutable_serialnumber() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_serialnumber();
  // @@protoc_insertion_point(field_mutable:service.grpc.CameraMeta_.serialNumber)
  return _s;
}
inline const std::string& CameraMeta_::_internal_serialnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serialnumber_.Get();
}
inline void CameraMeta_::_internal_set_serialnumber(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialnumber_.Set(value, GetArena());
}
inline std::string* CameraMeta_::_internal_mutable_serialnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.serialnumber_.Mutable( GetArena());
}
inline std::string* CameraMeta_::release_serialnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.grpc.CameraMeta_.serialNumber)
  return _impl_.serialnumber_.Release();
}
inline void CameraMeta_::set_allocated_serialnumber(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialnumber_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.serialnumber_.IsDefault()) {
          _impl_.serialnumber_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:service.grpc.CameraMeta_.serialNumber)
}

// string modelName = 2;
inline void CameraMeta_::clear_modelname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modelname_.ClearToEmpty();
}
inline const std::string& CameraMeta_::modelname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.grpc.CameraMeta_.modelName)
  return _internal_modelname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CameraMeta_::set_modelname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modelname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.grpc.CameraMeta_.modelName)
}
inline std::string* CameraMeta_::mutable_modelname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_modelname();
  // @@protoc_insertion_point(field_mutable:service.grpc.CameraMeta_.modelName)
  return _s;
}
inline const std::string& CameraMeta_::_internal_modelname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.modelname_.Get();
}
inline void CameraMeta_::_internal_set_modelname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modelname_.Set(value, GetArena());
}
inline std::string* CameraMeta_::_internal_mutable_modelname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.modelname_.Mutable( GetArena());
}
inline std::string* CameraMeta_::release_modelname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.grpc.CameraMeta_.modelName)
  return _impl_.modelname_.Release();
}
inline void CameraMeta_::set_allocated_modelname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modelname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.modelname_.IsDefault()) {
          _impl_.modelname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:service.grpc.CameraMeta_.modelName)
}

// string manufactureName = 3;
inline void CameraMeta_::clear_manufacturename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.manufacturename_.ClearToEmpty();
}
inline const std::string& CameraMeta_::manufacturename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.grpc.CameraMeta_.manufactureName)
  return _internal_manufacturename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CameraMeta_::set_manufacturename(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.manufacturename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.grpc.CameraMeta_.manufactureName)
}
inline std::string* CameraMeta_::mutable_manufacturename() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_manufacturename();
  // @@protoc_insertion_point(field_mutable:service.grpc.CameraMeta_.manufactureName)
  return _s;
}
inline const std::string& CameraMeta_::_internal_manufacturename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.manufacturename_.Get();
}
inline void CameraMeta_::_internal_set_manufacturename(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.manufacturename_.Set(value, GetArena());
}
inline std::string* CameraMeta_::_internal_mutable_manufacturename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.manufacturename_.Mutable( GetArena());
}
inline std::string* CameraMeta_::release_manufacturename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.grpc.CameraMeta_.manufactureName)
  return _impl_.manufacturename_.Release();
}
inline void CameraMeta_::set_allocated_manufacturename(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.manufacturename_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.manufacturename_.IsDefault()) {
          _impl_.manufacturename_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:service.grpc.CameraMeta_.manufactureName)
}

// string deviceVersion = 4;
inline void CameraMeta_::clear_deviceversion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deviceversion_.ClearToEmpty();
}
inline const std::string& CameraMeta_::deviceversion() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.grpc.CameraMeta_.deviceVersion)
  return _internal_deviceversion();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CameraMeta_::set_deviceversion(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deviceversion_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.grpc.CameraMeta_.deviceVersion)
}
inline std::string* CameraMeta_::mutable_deviceversion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deviceversion();
  // @@protoc_insertion_point(field_mutable:service.grpc.CameraMeta_.deviceVersion)
  return _s;
}
inline const std::string& CameraMeta_::_internal_deviceversion() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deviceversion_.Get();
}
inline void CameraMeta_::_internal_set_deviceversion(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deviceversion_.Set(value, GetArena());
}
inline std::string* CameraMeta_::_internal_mutable_deviceversion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.deviceversion_.Mutable( GetArena());
}
inline std::string* CameraMeta_::release_deviceversion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.grpc.CameraMeta_.deviceVersion)
  return _impl_.deviceversion_.Release();
}
inline void CameraMeta_::set_allocated_deviceversion(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deviceversion_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.deviceversion_.IsDefault()) {
          _impl_.deviceversion_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:service.grpc.CameraMeta_.deviceVersion)
}

// string userDefinedName = 5;
inline void CameraMeta_::clear_userdefinedname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userdefinedname_.ClearToEmpty();
}
inline const std::string& CameraMeta_::userdefinedname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.grpc.CameraMeta_.userDefinedName)
  return _internal_userdefinedname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CameraMeta_::set_userdefinedname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userdefinedname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.grpc.CameraMeta_.userDefinedName)
}
inline std::string* CameraMeta_::mutable_userdefinedname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_userdefinedname();
  // @@protoc_insertion_point(field_mutable:service.grpc.CameraMeta_.userDefinedName)
  return _s;
}
inline const std::string& CameraMeta_::_internal_userdefinedname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userdefinedname_.Get();
}
inline void CameraMeta_::_internal_set_userdefinedname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userdefinedname_.Set(value, GetArena());
}
inline std::string* CameraMeta_::_internal_mutable_userdefinedname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.userdefinedname_.Mutable( GetArena());
}
inline std::string* CameraMeta_::release_userdefinedname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.grpc.CameraMeta_.userDefinedName)
  return _impl_.userdefinedname_.Release();
}
inline void CameraMeta_::set_allocated_userdefinedname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userdefinedname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.userdefinedname_.IsDefault()) {
          _impl_.userdefinedname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:service.grpc.CameraMeta_.userDefinedName)
}

// string cameraType = 6;
inline void CameraMeta_::clear_cameratype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cameratype_.ClearToEmpty();
}
inline const std::string& CameraMeta_::cameratype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.grpc.CameraMeta_.cameraType)
  return _internal_cameratype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CameraMeta_::set_cameratype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cameratype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.grpc.CameraMeta_.cameraType)
}
inline std::string* CameraMeta_::mutable_cameratype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cameratype();
  // @@protoc_insertion_point(field_mutable:service.grpc.CameraMeta_.cameraType)
  return _s;
}
inline const std::string& CameraMeta_::_internal_cameratype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cameratype_.Get();
}
inline void CameraMeta_::_internal_set_cameratype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cameratype_.Set(value, GetArena());
}
inline std::string* CameraMeta_::_internal_mutable_cameratype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cameratype_.Mutable( GetArena());
}
inline std::string* CameraMeta_::release_cameratype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.grpc.CameraMeta_.cameraType)
  return _impl_.cameratype_.Release();
}
inline void CameraMeta_::set_allocated_cameratype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cameratype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cameratype_.IsDefault()) {
          _impl_.cameratype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:service.grpc.CameraMeta_.cameraType)
}

// map<string, string> info = 7;
inline int CameraMeta_::_internal_info_size() const {
  return _internal_info().size();
}
inline int CameraMeta_::info_size() const {
  return _internal_info_size();
}
inline void CameraMeta_::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& CameraMeta_::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.info_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& CameraMeta_::info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:service.grpc.CameraMeta_.info)
  return _internal_info();
}
inline ::google::protobuf::Map<std::string, std::string>* CameraMeta_::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.info_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* CameraMeta_::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:service.grpc.CameraMeta_.info)
  return _internal_mutable_info();
}

// -------------------------------------------------------------------

// CameraMetas

// repeated .service.grpc.CameraMeta_ data = 1;
inline int CameraMetas::_internal_data_size() const {
  return _internal_data().size();
}
inline int CameraMetas::data_size() const {
  return _internal_data_size();
}
inline void CameraMetas::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Clear();
}
inline ::service::grpc::CameraMeta_* CameraMetas::mutable_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:service.grpc.CameraMetas.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::service::grpc::CameraMeta_>* CameraMetas::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:service.grpc.CameraMetas.data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_data();
}
inline const ::service::grpc::CameraMeta_& CameraMetas::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.grpc.CameraMetas.data)
  return _internal_data().Get(index);
}
inline ::service::grpc::CameraMeta_* CameraMetas::add_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::service::grpc::CameraMeta_* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:service.grpc.CameraMetas.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::service::grpc::CameraMeta_>& CameraMetas::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:service.grpc.CameraMetas.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::service::grpc::CameraMeta_>&
CameraMetas::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::service::grpc::CameraMeta_>*
CameraMetas::_internal_mutable_data() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.data_;
}

// -------------------------------------------------------------------

// BytesBody

// bytes content = 1;
inline void BytesBody::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& BytesBody::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.grpc.BytesBody.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BytesBody::set_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.grpc.BytesBody.content)
}
inline std::string* BytesBody::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:service.grpc.BytesBody.content)
  return _s;
}
inline const std::string& BytesBody::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void BytesBody::_internal_set_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(value, GetArena());
}
inline std::string* BytesBody::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* BytesBody::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.grpc.BytesBody.content)
  return _impl_.content_.Release();
}
inline void BytesBody::set_allocated_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_.IsDefault()) {
          _impl_.content_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:service.grpc.BytesBody.content)
}

// -------------------------------------------------------------------

// ImageRequest_

// string sn = 1;
inline void ImageRequest_::clear_sn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sn_.ClearToEmpty();
}
inline const std::string& ImageRequest_::sn() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.grpc.ImageRequest_.sn)
  return _internal_sn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImageRequest_::set_sn(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sn_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.grpc.ImageRequest_.sn)
}
inline std::string* ImageRequest_::mutable_sn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sn();
  // @@protoc_insertion_point(field_mutable:service.grpc.ImageRequest_.sn)
  return _s;
}
inline const std::string& ImageRequest_::_internal_sn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sn_.Get();
}
inline void ImageRequest_::_internal_set_sn(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sn_.Set(value, GetArena());
}
inline std::string* ImageRequest_::_internal_mutable_sn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sn_.Mutable( GetArena());
}
inline std::string* ImageRequest_::release_sn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.grpc.ImageRequest_.sn)
  return _impl_.sn_.Release();
}
inline void ImageRequest_::set_allocated_sn(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sn_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sn_.IsDefault()) {
          _impl_.sn_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:service.grpc.ImageRequest_.sn)
}

// .service.grpc.ImageShape_ imageShape = 2;
inline bool ImageRequest_::has_imageshape() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.imageshape_ != nullptr);
  return value;
}
inline void ImageRequest_::clear_imageshape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.imageshape_ != nullptr) _impl_.imageshape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::service::grpc::ImageShape_& ImageRequest_::_internal_imageshape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::service::grpc::ImageShape_* p = _impl_.imageshape_;
  return p != nullptr ? *p : reinterpret_cast<const ::service::grpc::ImageShape_&>(::service::grpc::_ImageShape__default_instance_);
}
inline const ::service::grpc::ImageShape_& ImageRequest_::imageshape() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.grpc.ImageRequest_.imageShape)
  return _internal_imageshape();
}
inline void ImageRequest_::unsafe_arena_set_allocated_imageshape(::service::grpc::ImageShape_* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.imageshape_);
  }
  _impl_.imageshape_ = reinterpret_cast<::service::grpc::ImageShape_*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:service.grpc.ImageRequest_.imageShape)
}
inline ::service::grpc::ImageShape_* ImageRequest_::release_imageshape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::service::grpc::ImageShape_* released = _impl_.imageshape_;
  _impl_.imageshape_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::service::grpc::ImageShape_* ImageRequest_::unsafe_arena_release_imageshape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.grpc.ImageRequest_.imageShape)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::service::grpc::ImageShape_* temp = _impl_.imageshape_;
  _impl_.imageshape_ = nullptr;
  return temp;
}
inline ::service::grpc::ImageShape_* ImageRequest_::_internal_mutable_imageshape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.imageshape_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::service::grpc::ImageShape_>(GetArena());
    _impl_.imageshape_ = reinterpret_cast<::service::grpc::ImageShape_*>(p);
  }
  return _impl_.imageshape_;
}
inline ::service::grpc::ImageShape_* ImageRequest_::mutable_imageshape() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::service::grpc::ImageShape_* _msg = _internal_mutable_imageshape();
  // @@protoc_insertion_point(field_mutable:service.grpc.ImageRequest_.imageShape)
  return _msg;
}
inline void ImageRequest_::set_allocated_imageshape(::service::grpc::ImageShape_* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.imageshape_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.imageshape_ = reinterpret_cast<::service::grpc::ImageShape_*>(value);
  // @@protoc_insertion_point(field_set_allocated:service.grpc.ImageRequest_.imageShape)
}

// -------------------------------------------------------------------

// ImageShape_

// int32 width = 1;
inline void ImageShape_::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
}
inline ::int32_t ImageShape_::width() const {
  // @@protoc_insertion_point(field_get:service.grpc.ImageShape_.width)
  return _internal_width();
}
inline void ImageShape_::set_width(::int32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:service.grpc.ImageShape_.width)
}
inline ::int32_t ImageShape_::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void ImageShape_::_internal_set_width(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// int32 height = 2;
inline void ImageShape_::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
}
inline ::int32_t ImageShape_::height() const {
  // @@protoc_insertion_point(field_get:service.grpc.ImageShape_.height)
  return _internal_height();
}
inline void ImageShape_::set_height(::int32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:service.grpc.ImageShape_.height)
}
inline ::int32_t ImageShape_::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void ImageShape_::_internal_set_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// int32 channel = 3;
inline void ImageShape_::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = 0;
}
inline ::int32_t ImageShape_::channel() const {
  // @@protoc_insertion_point(field_get:service.grpc.ImageShape_.channel)
  return _internal_channel();
}
inline void ImageShape_::set_channel(::int32_t value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:service.grpc.ImageShape_.channel)
}
inline ::int32_t ImageShape_::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_;
}
inline void ImageShape_::_internal_set_channel(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc
}  // namespace service


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_camera_2dservice_2eproto_2epb_2eh
